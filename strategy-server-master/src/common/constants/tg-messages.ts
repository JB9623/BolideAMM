import stdSerializers from 'pino-std-serializers';
import type { StrategyDto } from 'src/modules/strategies/dto/StrategyDto';

import { COMMANDS } from '../../modules/telegram/constants/commands';
import type { LogicException } from '../logic.exception';
import type { PLATFORMS } from './platforms';

export const COMMANDS_DESCS = {
  COMMAND_START: 'Hello and welcome!',
  COMMAND_HELP: 'About bot functions.',
};

export const TG_MESSAGES = {
  START: `
    Hello and Welcome!üëã
  `,

  COMMAND_ADMIN_BIND_TARGET_GROUP: `${COMMANDS.ADMIN_BIND_TARGET_GROUP} - bind target group (admin only)`,

  UNKNOWN_COMMAND: `Unknown command. Try ${COMMANDS.START}`,

  SUCCESS: 'Action successful',

  HELLO_OWNER: `Hello, new owner. I will bind me to the group via ${COMMANDS.ADMIN_BIND_TARGET_GROUP}`,

  BNB_BORROW_COST_CHANGE: (data: {
    borrowApy: string | number;
    platform: PLATFORMS;
  }) => `–ò–∑–º–µ–Ω–∏–ª–∞—Å—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–π–º–∞ BNB –Ω–∞ ${data.platform}: ${data.borrowApy}`,

  BORROW_LIMIT_MAX: (data: { max: number; current: number }) =>
    `–ü—Ä–µ–≤—ã—à–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–∞–π–º–∞ ${data.max} —Ç–µ–∫—É—â–µ–µ ${data.current}`,

  ADMIN_BNB_BALANCE_TO_LOW: (data: {
    currentBalance: string;
    minBalance: string;
    adminWalletAddress: string;
  }) =>
    `–û—Å—Ç–∞—Ç–æ–∫ BNB –Ω–∞ –∫–æ—à–µ–ª—å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–ª–∏—à–∫–æ–º –º–∞–ª: <b>${data.currentBalance}</b>. –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π –º–∏–Ω–∏–º—É–º: ${data.minBalance}. –ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${data.adminWalletAddress}`,

  ADMIN_BNB_BALANCE_FINE: (data: {
    currentBalance: string;
    adminWalletAddress: string;
  }) =>
    `–û—Å—Ç–∞—Ç–æ–∫ BNB –Ω–∞ –∫–æ—à–µ–ª—å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –Ω–æ—Ä–º–µ: <b>${data.currentBalance}</b>. –ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${data.adminWalletAddress}`,

  BOOSTING_BLID_BALANCE_TO_LOW: (data: {
    boostingBalance: number;
    needBalance: number;
    boostingWalletAddress: string;
  }) =>
    `–û—Å—Ç–∞—Ç–æ–∫ BLID –Ω–∞ –∫–æ—à–µ–ª—å–∫–µ –¥–ª—è –±—É—Å—Ç–∏–Ω–≥–∞ —Å–ª–∏—à–∫–æ–º –º–∞–ª: <b>${data.boostingBalance}</b>. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –±—É—Å—Ç–∏–Ω–≥–∞: ${data.needBalance}. –ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${data.boostingWalletAddress}`,

  MONITORING_PAIRS_RATIO_CHANGE: (data: {
    pairName: string;
    percentDiff: number;
    tokensPrice: string;
  }) =>
    `–í –ø–∞—Ä–µ ${data.pairName} —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –Ω–∞ <b>${data.percentDiff}%</b>. –ù–æ–≤–∞—è —Ü–µ–Ω–∞: ${data.tokensPrice}`,
  DEBT_WARNING: (data: {
    preMsg: string;
    tokenName: string;
    diff: string;
    uid: string;
  }) =>
    `${data.preMsg} –ø–æ —Ç–æ–∫–µ–Ω—É ${data.tokenName} –≤ —Ä–∞–∑–º–µ—Ä–µ <b>${Number(
      data.diff,
    ).toFixed(5)} BNB</b>, operation_id ${data.uid}`,

  TRANSFER_LEDNED_TO_STORAGE: (data: {
    amount: string;
    token: string;
    uid: string;
  }) =>
    `–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ lended ${data.amount} ${data.token}, operation_id ${data.uid}`,

  MIN_BLID_USD_BALANCE: (data: {
    currentBlidBalanceUsd: string;
    minBlidBalanceUsd: string;
  }) =>
    `–ù–∞ –∫–æ—à–µ–ª—å–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã —Å—Ç–µ–π–∫–∏–Ω–≥–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ! –¢–µ–∫—É—â–µ–µ: ${data.currentBlidBalanceUsd}, –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ: ${data.minBlidBalanceUsd}`,

  STRATEGY_CHANGE_STATUS: (data: { strategyName: string; isActive: boolean }) =>
    `–°—Ç—Ä–∞—Ç–µ–≥–∏—è "${data.strategyName}" —Å—Ç–∞–ª–∞ ${
      data.isActive ? '–∞–∫—Ç–∏–≤–Ω–æ–π' : '–Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π'
    }!`,

  STRATEGY_CHANGED: (data: { strategyName: string; changes: any }) =>
    `–£ —Å—Ç—Ä–∞—Ç–µ–≥–∏ "${
      data.strategyName
    }" –∏–∑–º–µ–Ω–∏–ª–∏—Å—å —Å–ª–µ–¥—É—é—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ ${JSON.stringify(
      data.changes,
    )}. –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Å—Ç–∞–ª–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π!`,

  STRATEGY_ADD_PAIR: (data: { strategyName: string; pairName: string }) =>
    `–ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ "${data.strategyName}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–∞—Ä–∞ ${data.pairName}`,

  STRATEGY_UPDATE_PAIR: (data: { strategyName: string; pairName: string }) =>
    `–í —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ "${data.strategyName}" –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–∞—Ä–∞ ${data.pairName}`,

  STRATEGY_DELETE_PAIR: (data: { strategyName: string; pairName: string }) =>
    `–í —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ "${data.strategyName}" —É–¥–∞–ª–µ–Ω–∞ –ø–∞—Ä–∞ ${data.pairName}. –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Å—Ç–∞–ª–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π!`,

  LP_CONTRACT_ADDED: (data: { pairName: string; platform: PLATFORMS }) =>
    `–ù–∞ –ø–ª–∞—Ç—Ñ–æ–º–µ "${data.platform}" –ø–æ—è–≤–∏–ª–∞—Å—å –Ω–æ–≤–∞—è –ø–∞—Ä–∞ ${data.pairName}`,

  LP_CONTRACT_DELETED: (data: {
    pairName: string;
    platform: PLATFORMS;
    strategies: StrategyDto[];
  }) => {
    const strategiesMsgs = data.strategies.map(
      (strategy) => `${strategy.name} (${strategy.id})`,
    );

    return `Pair "${data.pairName}" has been removed from "${
      data.platform
    }" platform. The pair is used by the following strategies: ${strategiesMsgs.join()}`;
  },

  NOT_DISTRIBUTE: ({
    uid,
    limit,
    available,
  }: {
    uid: string;
    limit: string;
    available: string;
  }) => `–ù–µ –ø—Ä–æ—à–ª–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ${available}(–ª–∏–º–∏—Ç ${limit}), ${uid}`,

  DISTRIBUTE_FAILED: ({
    error,
    operationId,
  }: {
    error: LogicException | Error;
    operationId: string;
  }) => {
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore skip
    const resp = error.response;
    const errMsg = resp
      ? JSON.stringify(resp)
      : stdSerializers.err(error).stack;

    return `–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è ${operationId} ${errMsg}`;
  },

  NEGATIVE_BALANCE: ({
    amount,
    strategyId,
    operationId,
  }: {
    amount: number;
    strategyId: number;
    operationId: string;
  }) =>
    `Strategy ${strategyId} has negative blanace ${amount} during claiming execution ${operationId}`,
};
