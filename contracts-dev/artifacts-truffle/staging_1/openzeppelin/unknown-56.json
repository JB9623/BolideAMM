{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x67d9C91B59824317140a6e813366d4E3D16e273B",
    "txHash": "0xae921d8b81dbd16a142f81aeea92d2466186252a8a84eb41e4ba2450da87c87a"
  },
  "proxies": [
    {
      "address": "0xC247C74CE2CDfd992BB2230F27A92DaA8082D452",
      "txHash": "0x491a9313af1b5e3887e33edef8bb3c0b3384b338ed66bb69d26114f10185cdaa",
      "kind": "transparent"
    }
  ],
  "impls": {
    "320ea22cd9789c91bce2d47b5885e1285bb8dbbdac7309b816b7e90659f68597": {
      "address": "0x562b4D7Fe9399f60fA1428D2C3CE47eAc2D570C7",
      "txHash": "0xdef82b0ed399b68e471742725f6137bfb327dae73d3f24fa8b142c259f78bcc3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "StorageV0Old",
            "label": "earnBLID",
            "type": "t_mapping(t_uint256,t_struct(EarnBLID)15522_storage)",
            "src": "../project:/contracts/StorageV0Old.sol:58"
          },
          {
            "contract": "StorageV0Old",
            "label": "countEarns",
            "type": "t_uint256",
            "src": "../project:/contracts/StorageV0Old.sol:59"
          },
          {
            "contract": "StorageV0Old",
            "label": "countTokens",
            "type": "t_uint256",
            "src": "../project:/contracts/StorageV0Old.sol:60"
          },
          {
            "contract": "StorageV0Old",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/StorageV0Old.sol:61"
          },
          {
            "contract": "StorageV0Old",
            "label": "tokenBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StorageV0Old.sol:62"
          },
          {
            "contract": "StorageV0Old",
            "label": "oracles",
            "type": "t_mapping(t_address,t_address)",
            "src": "../project:/contracts/StorageV0Old.sol:63"
          },
          {
            "contract": "StorageV0Old",
            "label": "tokensAdd",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/StorageV0Old.sol:64"
          },
          {
            "contract": "StorageV0Old",
            "label": "deposits",
            "type": "t_mapping(t_address,t_struct(DepositStruct)15509_storage)",
            "src": "../project:/contracts/StorageV0Old.sol:65"
          },
          {
            "contract": "StorageV0Old",
            "label": "tokenDeposited",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/StorageV0Old.sol:66"
          },
          {
            "contract": "StorageV0Old",
            "label": "tokenTime",
            "type": "t_mapping(t_address,t_int256)",
            "src": "../project:/contracts/StorageV0Old.sol:67"
          },
          {
            "contract": "StorageV0Old",
            "label": "reserveBLID",
            "type": "t_uint256",
            "src": "../project:/contracts/StorageV0Old.sol:68"
          },
          {
            "contract": "StorageV0Old",
            "label": "logicContract",
            "type": "t_address",
            "src": "../project:/contracts/StorageV0Old.sol:69"
          },
          {
            "contract": "StorageV0Old",
            "label": "BLID",
            "type": "t_address",
            "src": "../project:/contracts/StorageV0Old.sol:70"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(EarnBLID)15522_storage)": {
            "label": "mapping(uint256 => struct StorageV0Old.EarnBLID)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EarnBLID)15522_storage": {
            "label": "struct StorageV0Old.EarnBLID",
            "members": [
              {
                "label": "allBLID",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "usd",
                "type": "t_uint256"
              },
              {
                "label": "tdt",
                "type": "t_uint256"
              },
              {
                "label": "rates",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(DepositStruct)15509_storage)": {
            "label": "mapping(address => struct StorageV0Old.DepositStruct)"
          },
          "t_struct(DepositStruct)15509_storage": {
            "label": "struct StorageV0Old.DepositStruct",
            "members": [
              {
                "label": "amount",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "tokenTime",
                "type": "t_mapping(t_address,t_int256)"
              },
              {
                "label": "iterate",
                "type": "t_uint256"
              },
              {
                "label": "balanceBLID",
                "type": "t_uint256"
              },
              {
                "label": "depositIterate",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "92aa52f72d15556f8ea60d2d71ec8ac7fe33866c112dd9b6d7ea2577f4ea614c": {
      "address": "0x83949341be000d9baE5719AB21fD53569A88AABE",
      "txHash": "0x4698c97dab9842c828a61ba677635589eb8f1ca5c839ba7ffd21ecdf22685023",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "StorageV0",
            "label": "earnBLID",
            "type": "t_mapping(t_uint256,t_struct(EarnBLID)1280_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "countEarns",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "countTokens",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "tokenBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "oracles",
            "type": "t_mapping(t_address,t_address)",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "tokensAdd",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "deposits",
            "type": "t_mapping(t_address,t_struct(DepositStruct)1267_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "tokenDeposited",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "tokenTime",
            "type": "t_mapping(t_address,t_int256)",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "reserveBLID",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "logicContract",
            "type": "t_address",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          },
          {
            "contract": "StorageV0",
            "label": "BLID",
            "type": "t_address",
            "src": "../@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(EarnBLID)1280_storage)": {
            "label": "mapping(uint256 => struct StorageV0.EarnBLID)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EarnBLID)1280_storage": {
            "label": "struct StorageV0.EarnBLID",
            "members": [
              {
                "label": "allBLID",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "usd",
                "type": "t_uint256"
              },
              {
                "label": "tdt",
                "type": "t_uint256"
              },
              {
                "label": "rates",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(DepositStruct)1267_storage)": {
            "label": "mapping(address => struct StorageV0.DepositStruct)"
          },
          "t_struct(DepositStruct)1267_storage": {
            "label": "struct StorageV0.DepositStruct",
            "members": [
              {
                "label": "amount",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "tokenTime",
                "type": "t_mapping(t_address,t_int256)"
              },
              {
                "label": "iterate",
                "type": "t_uint256"
              },
              {
                "label": "balanceBLID",
                "type": "t_uint256"
              },
              {
                "label": "depositIterate",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "323de37a8beee5f4ef0a601d2fee14226143a4f0b2596f0b7fa844f016346abb": {
      "address": "0x5E2CE7CA1c419EBc7e07949b162c45FCba8752C1",
      "txHash": "0xe53f3413de9014a86087d694a038086a486fa32d2bfff18b947407cf158f1c62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "StorageV2",
            "label": "earnBLID",
            "type": "t_mapping(t_uint256,t_struct(EarnBLID)3210_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:59"
          },
          {
            "contract": "StorageV2",
            "label": "countEarns",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:60"
          },
          {
            "contract": "StorageV2",
            "label": "countTokens",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:62"
          },
          {
            "contract": "StorageV2",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:64"
          },
          {
            "contract": "StorageV2",
            "label": "tokenBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:64"
          },
          {
            "contract": "StorageV2",
            "label": "oracles",
            "type": "t_mapping(t_address,t_address)",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:65"
          },
          {
            "contract": "StorageV2",
            "label": "tokensAdd",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:65"
          },
          {
            "contract": "StorageV2",
            "label": "deposits",
            "type": "t_mapping(t_address,t_struct(DepositStruct)3197_storage)",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:68"
          },
          {
            "contract": "StorageV2",
            "label": "tokenDeposited",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:70"
          },
          {
            "contract": "StorageV2",
            "label": "tokenTime",
            "type": "t_mapping(t_address,t_int256)",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:72"
          },
          {
            "contract": "StorageV2",
            "label": "reserveBLID",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:74"
          },
          {
            "contract": "StorageV2",
            "label": "logicContract",
            "type": "t_address",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:74"
          },
          {
            "contract": "StorageV2",
            "label": "BLID",
            "type": "t_address",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:75"
          },
          {
            "contract": "StorageV2",
            "label": "accumulatedRewardsPerShare",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:75"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(EarnBLID)3210_storage)": {
            "label": "mapping(uint256 => struct StorageV2.EarnBLID)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EarnBLID)3210_storage": {
            "label": "struct StorageV2.EarnBLID",
            "members": [
              {
                "label": "allBLID",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "usd",
                "type": "t_uint256"
              },
              {
                "label": "tdt",
                "type": "t_uint256"
              },
              {
                "label": "rates",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(DepositStruct)3197_storage)": {
            "label": "mapping(address => struct StorageV2.DepositStruct)"
          },
          "t_struct(DepositStruct)3197_storage": {
            "label": "struct StorageV2.DepositStruct",
            "members": [
              {
                "label": "amount",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "tokenTime",
                "type": "t_mapping(t_address,t_int256)"
              },
              {
                "label": "iterate",
                "type": "t_uint256"
              },
              {
                "label": "balanceBLID",
                "type": "t_uint256"
              },
              {
                "label": "depositIterate",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
